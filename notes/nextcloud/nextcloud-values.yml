internalDatabase:
  enabled: false

externalDatabase:
  enabled: true
  type: postgresql
  database: nextcloud
  user: nextcloud
  password: changeme
  host: 127.0.0.1:5432

postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        username: nextcloud
        password: changeme
        database: nextcloud

  primary:
    persistence:
      enabled: true

nextcloud:
  configs:
    s3.config.php: |-
      <?php
      $CONFIG = array (
        'objectstore' => array(
          'class' => '\\OC\\Files\\ObjectStore\\S3',
          'arguments' => array(
            'bucket'     => 'nextcloud',
            'autocreate' => true,
            'hostname'   => 's3.us-west-002.backblazeb2.com',
            'port'       => 443,
            'key'        => '00318308deaf09a0000000001',
            'secret'     => 'K003xh3NhMgVZnIPm7u0pm59SL7jQrs',
            'region'     => 'us-west-002',
            'use_ssl'    => true
          )
        )
      );



metrics:
  enabled: true

  replicaCount: 1
  # The metrics exporter needs to know how you serve Nextcloud either http or https
  https: false
  # Use API token if set, otherwise fall back to password authentication
  # https://github.com/xperimental/nextcloud-exporter#token-authentication
  # Currently you still need to set the token manually in your nextcloud install
  token: ""
  timeout: 5s

  image:
    repository: xperimental/nextcloud-exporter
    tag: 0.5.1
    pullPolicy: IfNotPresent

  ## Metrics exporter resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  # resources: {}

  ## Metrics exporter pod Annotation and Labels
  # podAnnotations: {}

  # podLabels: {}

  service:
    type: ClusterIP
    ## Use serviceLoadBalancerIP to request a specific static IP,
    ## otherwise leave blank
    # loadBalancerIP:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9205"
    labels: {}

# TODO: fix this section
rbac:
  enabled: false
  serviceaccount:
    create: true
    name: nextcloud-serviceaccount
